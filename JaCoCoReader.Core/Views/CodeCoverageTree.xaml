<UserControl x:Class="JaCoCoReader.Core.Views.CodeCoverageTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls1="clr-namespace:JaCoCoReader.Core.UI.Controls"
             xmlns:codeCoverage1="clr-namespace:JaCoCoReader.Core.ViewModels.CodeCoverage"
             xmlns:icons="clr-namespace:JaCoCoReader.Core.UI.Icons"
             d:DataContext="{d:DesignInstance Type=codeCoverage1:CodeCoverageViewModel, IsDesignTimeCreatable=false}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/JaCoCoReader.Core;component/UI/Resources/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <controls1:TreeListView ItemsSource="{Binding Folders.Nodes}" SelectedNodeItem="{Binding SelectedNode, Mode=TwoWay}" 
                                  BorderThickness="0">
        <controls1:TreeListView.ContextMenu>
            <ContextMenu>
                <MenuItem Command="{Binding OpenFileCommand}" Header="open file" />
            </ContextMenu>
        </controls1:TreeListView.ContextMenu>
        <controls1:TreeListView.Columns>
            <GridViewColumn Header="Name" Width="250">
                <GridViewColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type codeCoverage1:FolderViewModel}">
                        <DockPanel>
                            <ToggleButton x:Name="Expander" 
                                                  Style="{StaticResource ExpandCollapseToggleStyle}" 
                                                  Margin="{Binding Level,Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource AncestorType={x:Type controls1:TreeListViewItem}}}"
                                                  IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource AncestorType={x:Type controls1:TreeListViewItem}}}"
                                                  ClickMode="Press"/>

                            <icons:FontAwesome Icon="{Binding Icon}" Foreground="{Binding Background}" />
                            <TextBlock Text="{Binding Description}" Margin="5,0,0,0"/>
                        </DockPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=HasItems,RelativeSource={RelativeSource AncestorType={x:Type controls1:TreeListViewItem}}}" 
                                                 Value="False">
                                <Setter TargetName="Expander"
                                                Property="Visibility"
                                                Value="Hidden"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="Covered" Width="70" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type codeCoverage1:FolderViewModel}">
                        <TextBlock TextAlignment="Right" Text="{Binding CoveredLines}" />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="%" Width="50" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type codeCoverage1:FolderViewModel}">
                        <TextBlock TextAlignment="Right" Text="{Binding CoveredLinesPercentage, StringFormat={}{0:p0}}" />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="Missed" Width="70" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type codeCoverage1:FolderViewModel}">
                        <TextBlock TextAlignment="Right" Text="{Binding MissedLines}"  />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="%" Width="50" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type codeCoverage1:FolderViewModel}">
                        <TextBlock TextAlignment="Right" Text="{Binding MissedLinesPercentage, StringFormat={}{0:p0}}"  />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="Total" Width="70" >
                <GridViewColumn.CellTemplate>
                    <DataTemplate DataType="{x:Type codeCoverage1:FolderViewModel}">
                        <TextBlock TextAlignment="Right" Text="{Binding TotalLines}"  />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

        </controls1:TreeListView.Columns>

        <controls1:TreeListView.Resources>

            <HierarchicalDataTemplate DataType="{x:Type codeCoverage1:FolderViewModel}" ItemsSource="{Binding Items}"/>

            <HierarchicalDataTemplate DataType="{x:Type codeCoverage1:SourcefileViewModel}"/>

        </controls1:TreeListView.Resources>

        <!--<controls1:TreeViewEx.ItemContainerStyle>
                    <Style TargetType="{x:Type controls1:TreeViewItemEx}" BasedOn="{StaticResource MetroTreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="IsHighlighted" Value="{Binding IsHighlighted, Mode=TwoWay}" />
                        <Setter Property="DoBringIntoView" Value="{Binding BringIntoView, Mode=TwoWay}" />
                    </Style>
                </controls1:TreeViewEx.ItemContainerStyle>-->
    </controls1:TreeListView>
</UserControl>



